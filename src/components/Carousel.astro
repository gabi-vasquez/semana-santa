---
const images = Astro.props.images;
---

<div class="carousel">
  <div class="carousel-inner">
    {
      images.map((image: string, index: number) => (
        <div class={`carousel-item ${index === 0 ? "active" : ""}`}>
          <img src={image} alt={`Slide ${index + 1}`} />
        </div>
      ))
    }
  </div>

  <a class="carousel-prev" href="#" aria-label="Previous">
    <span class="carousel-prev-icon" aria-hidden="true"></span>
  </a>
  <a class="carousel-next" href="#" aria-label="Next">
    <span class="carousel-next-icon" aria-hidden="true"></span>
  </a>

  <div class="carousel-indicators">
    {
      images.map((_, index: number) => (
        <button
          type="button"
          data-bs-target=""
          data-bs-slide-to={index}
          class={`${index === 0 ? "active" : ""}`}
          aria-current={index === 0}
          aria-label={`Slide ${index + 1}`}
        />
      ))
    }
  </div>
</div>

<style>
  /* src/styles/carousel.css */

  .carousel {
    width: 50rem;
    height: 0;
    padding-bottom: 66.67%;
    overflow: hidden;
    position: relative;
  }

  .carousel-inner {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .carousel-item {
    position: relative;
    display: none;
    float: left;
    width: 100%;
    height: 100%;
    object-fit: contain;
    margin-right: -100%;
  }

  .carousel-item.active {
    display: block;
  }

  .carousel-item img {
    width: 100%;
    height: auto;
  }

  .carousel-prev,
  .carousel-next {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    font-size: 2rem;
    color: #fff;
    text-decoration: none;
    padding: 0.5rem;
  }

  .carousel-prev {
    left: 1rem;
  }

  .carousel-next {
    right: 1rem;
  }

  .carousel-prev-icon,
  .carousel-next-icon {
    display: inline-block;
    width: 2rem;
    height: 2rem;
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 50%;
    background-position: center;
    background-repeat: no-repeat;
  }

  .carousel-prev-icon {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3E%3Cpath d='M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z'/%3E%3C/svg%3E");
  }

  .carousel-next-icon {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3E%3Cpath d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'/%3E%3C/svg%3E");
  }

  .carousel-indicators {
    position: absolute;
    bottom: 1rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 0.5rem;
  }

  .carousel-indicators button {
    width: 0.75rem;
    height: 0.75rem;
    border: none;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.5);
    transition: background-color 0.3s ease;
  }

  .carousel-indicators button.active {
    background-color: #fff;
  }
</style>

<script is:inline>
  const carouselItems = document.querySelectorAll(".carousel-item");
  const carouselIndicators = document.querySelectorAll(
    ".carousel-indicators button"
  );
  const prevButton = document.querySelector(".carousel-prev");
  const nextButton = document.querySelector(".carousel-next");

  let currentIndex = 0;

  function showSlide(index) {
    [...carouselItems, ...carouselIndicators].forEach((el, i) => {
      el.classList.toggle(
        "active",
        i === index || i === index + carouselItems.length
      );
    });
  }

  function changeSlide(step) {
    currentIndex =
      (currentIndex + step + carouselItems.length) % carouselItems.length;
    showSlide(currentIndex);
  }

  prevButton.addEventListener("click", (event) => {
    event.preventDefault();
    changeSlide(-1);
  });

  nextButton.addEventListener("click", (event) => {
    event.preventDefault();
    changeSlide(1);
  });

  carouselIndicators.forEach((indicator, index) => {
    indicator.addEventListener("click", () => {
      currentIndex = index;
      showSlide(currentIndex);
    });
  });

  showSlide(currentIndex);
</script>
